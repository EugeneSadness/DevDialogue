#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞"
echo "===================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down -v

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å—é —Å–∏—Å—Ç–µ–º—É
echo "üî® –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã..."
echo "   üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
echo "   üîê Auth Service"
echo "   üí¨ Message Service"
echo "   üîî Notification Service"
echo "   üìä Monitoring Service"
echo "   üåê Frontend React App"
echo "   üîÑ Nginx Reverse Proxy"

docker-compose up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo "   –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ..."

# –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î
sleep 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker-compose ps

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
check_health() {
    local service_name=$1
    local url=$2
    local max_attempts=10
    local attempt=1

    while [ $attempt -le $max_attempts ]; do
        if curl -f -s "$url" > /dev/null 2>&1; then
            echo "‚úÖ $service_name: –†–∞–±–æ—Ç–∞–µ—Ç"
            return 0
        else
            echo "‚è≥ $service_name: –û–∂–∏–¥–∞–Ω–∏–µ... (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts)"
            sleep 5
            ((attempt++))
        fi
    done
    
    echo "‚ùå $service_name: –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Å–µ—Ä–≤–∏—Å
check_health "Auth Service" "http://localhost:3001/health"
check_health "Message Service" "http://localhost:3002/health"
check_health "Notification Service" "http://localhost:3003/health"
check_health "Monitoring Service" "http://localhost:3004/health"
check_health "Frontend" "http://localhost:3000"
check_health "Nginx Proxy" "http://localhost:4000/nginx-health"

echo ""
echo "üéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo "==================="
echo "üåê –ì–ª–∞–≤–Ω—ã–π URL: http://localhost:4000"
echo "üì± React Dev Server: http://localhost:3000"
echo ""
echo "üîó API Endpoints:"
echo "  üîê Auth: http://localhost:4000/api/auth/"
echo "  üí¨ Messages: http://localhost:4000/api/messages/"
echo "  üîî Notifications: http://localhost:4000/api/notifications/"
echo "  üìä Health: http://localhost:4000/api/health/"
echo ""
echo "üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL:"
echo "  Host: localhost:5432"
echo "  Database: messenger"
echo "  User: messenger_user"
echo "  Password: messenger_pass"
echo ""
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose logs -f"
echo "  –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: docker-compose logs -f [service-name]"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É: docker-compose down"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose restart"
echo "  –°—Ç–∞—Ç—É—Å: docker-compose ps"
