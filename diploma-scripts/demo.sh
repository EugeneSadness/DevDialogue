#!/bin/bash

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π DevOps-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã
# –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö –∏–∑ diploma/screenshots.md

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "\n${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë$(printf "%62s" " ")‚ïë${NC}"
    echo -e "${BLUE}‚ïë$(printf "%*s" $(((62 + ${#1})/2)) "$1")$(printf "%*s" $(((62 - ${#1})/2)) " ")‚ïë${NC}"
    echo -e "${BLUE}‚ïë$(printf "%62s" " ")‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—Ö–∞
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—É–∑—ã
pause_demo() {
    echo -e "\n${PURPLE}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
    read
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ Docker
demo_docker() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø DOCKER –ö–û–ù–¢–ï–ô–ù–ï–†–ò–ó–ê–¶–ò–ò"
    
    print_info "–°–æ–∑–¥–∞–µ–º Dockerfile –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è Node.js –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞..."
    ./setup-docker/create-dockerfile.sh
    
    pause_demo
    
    print_info "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ Docker –∫–æ–º–∞–Ω–¥—ã..."
    ./setup-docker/docker-commands.sh help
    
    pause_demo
    
    print_info "–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
    ./setup-docker/docker-commands.sh build
    
    print_success "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ Kubernetes
demo_kubernetes() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø KUBERNETES –û–†–ö–ï–°–¢–†–ê–¶–ò–ò"
    
    print_info "–°–æ–∑–¥–∞–µ–º Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã —Å HPA..."
    ./setup-kubernetes/create-hpa.sh
    
    pause_demo
    
    print_info "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º Kubernetes –∫–æ–º–∞–Ω–¥—ã..."
    ./setup-kubernetes/k8s-commands.sh help
    
    print_success "Kubernetes –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ CI/CD
demo_cicd() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø CI/CD PIPELINE"
    
    print_info "–°–æ–∑–¥–∞–µ–º GitHub Actions workflows..."
    ./setup-cicd/create-github-actions.sh
    
    pause_demo
    
    print_info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Git hooks –∏ CI/CD –∫–æ–º–∞–Ω–¥—ã..."
    ./setup-cicd/cicd-commands.sh setup
    
    pause_demo
    
    print_info "–ó–∞–ø—É—Å–∫–∞–µ–º –ª–∏–Ω—Ç–µ—Ä—ã –∏ —Ç–µ—Å—Ç—ã..."
    ./setup-cicd/cicd-commands.sh lint
    ./setup-cicd/cicd-commands.sh test
    
    print_success "CI/CD pipeline –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
demo_monitoring() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê (PROMETHEUS + GRAFANA)"
    
    print_info "–ó–∞–ø—É—Å–∫–∞–µ–º Prometheus –∏ Grafana..."
    ./setup-docker/run-monitoring.sh
    
    pause_demo
    
    print_info "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    echo -e "${CYAN}üîó Prometheus: http://localhost:9090${NC}"
    echo -e "${CYAN}üîó Grafana: http://localhost:3000 (admin/admin123)${NC}"
    
    print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
demo_logging() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø ELK STACK –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø"
    
    print_info "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é ELK Stack..."
    ./setup-logging/create-elk-stack.sh
    
    pause_demo
    
    print_info "–ó–∞–ø—É—Å–∫–∞–µ–º ELK Stack..."
    cd elk-stack && ./start-elk.sh && cd ..
    
    pause_demo
    
    print_info "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏..."
    ./setup-logging/logging-commands.sh test
    
    print_info "ELK Stack –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    echo -e "${CYAN}üîó Kibana: http://localhost:5601${NC}"
    echo -e "${CYAN}üîó Elasticsearch: http://localhost:9200${NC}"
    
    print_success "ELK Stack –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
demo_security() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø VAULT –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
    
    print_info "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Vault..."
    ./setup-security/create-vault-config.sh
    
    pause_demo
    
    print_info "–ó–∞–ø—É—Å–∫–∞–µ–º Vault..."
    cd vault-setup && ./start-vault.sh && cd ..
    
    pause_demo
    
    print_info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Vault..."
    cd vault-setup && ./init-vault.sh && cd ..
    
    pause_demo
    
    print_info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –∏ —Å–µ–∫—Ä–µ—Ç—ã..."
    cd vault-setup && ./setup-policies.sh && cd ..
    
    print_info "Vault –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    echo -e "${CYAN}üîó Vault UI: http://localhost:8200${NC}"
    echo -e "${CYAN}üîó Vault UI (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π): http://localhost:8000${NC}"
    
    print_success "Vault –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
demo_database() {
    print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø POSTGRESQL –†–ï–ü–õ–ò–ö–ê–¶–ò–ò"
    
    print_info "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PostgreSQL —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏..."
    ./setup-database/create-postgres-config.sh
    
    pause_demo
    
    print_info "–ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∫–ª–∞—Å—Ç–µ—Ä..."
    cd postgres-replication && ./start-postgres-cluster.sh && cd ..
    
    pause_demo
    
    print_info "–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–ª–∏–∫–∞—Ü–∏—é..."
    cd postgres-replication && ./test-replication.sh && cd ..
    
    print_info "PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    echo -e "${CYAN}üîó Master: localhost:5432${NC}"
    echo -e "${CYAN}üîó Slave: localhost:5433${NC}"
    echo -e "${CYAN}üîó pgAdmin: http://localhost:8080${NC}"
    
    print_success "PostgreSQL —Ä–µ–ø–ª–∏–∫–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
show_final_status() {
    print_header "–ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–° –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´"
    
    echo -e "${CYAN}üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" 2>/dev/null || echo "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    
    echo -e "\n${CYAN}üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:${NC}"
    echo "‚úÖ messenger-service/     - Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "‚úÖ k8s-manifests/         - Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã"
    echo "‚úÖ .github/workflows/     - GitHub Actions workflows"
    echo "‚úÖ elk-stack/             - ELK Stack –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "‚úÖ vault-setup/           - Vault –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    echo "‚úÖ postgres-replication/  - PostgreSQL —Ä–µ–ø–ª–∏–∫–∞—Ü–∏—è"
    
    echo -e "\n${CYAN}üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo "üåê Messenger API:     http://localhost:3000"
    echo "üìä Grafana:           http://localhost:3000 (admin/admin123)"
    echo "üìà Prometheus:        http://localhost:9090"
    echo "üìã Kibana:            http://localhost:5601"
    echo "üîí Vault:             http://localhost:8200"
    echo "üóÑÔ∏è  pgAdmin:           http://localhost:8080"
    
    echo -e "\n${CYAN}üìö –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo "./run-all.sh status           - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "./setup-docker/docker-commands.sh help    - Docker –∫–æ–º–∞–Ω–¥—ã"
    echo "./setup-kubernetes/k8s-commands.sh help   - Kubernetes –∫–æ–º–∞–Ω–¥—ã"
    echo "./setup-logging/logging-commands.sh help  - ELK –∫–æ–º–∞–Ω–¥—ã"
    
    print_success "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è DevOps-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é
interactive_menu() {
    while true; do
        print_header "–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø DEVOPS –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´ –ú–ï–°–°–ï–ù–î–ñ–ï–†–ê"
        
        echo -e "${CYAN}–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:${NC}"
        echo "1) üê≥ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è"
        echo "2) ‚ò∏Ô∏è  Kubernetes –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è"
        echo "3) üîÑ CI/CD pipeline"
        echo "4) üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (Prometheus + Grafana)"
        echo "5) üìã –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (ELK Stack)"
        echo "6) üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (Vault)"
        echo "7) üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (PostgreSQL —Ä–µ–ø–ª–∏–∫–∞—Ü–∏—è)"
        echo "8) üéØ –ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è (–≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã)"
        echo "9) üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "0) –í—ã—Ö–æ–¥"
        
        echo -e "\n${PURPLE}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (0-9): ${NC}"
        read choice
        
        case $choice in
            1) demo_docker ;;
            2) demo_kubernetes ;;
            3) demo_cicd ;;
            4) demo_monitoring ;;
            5) demo_logging ;;
            6) demo_security ;;
            7) demo_database ;;
            8) 
                demo_docker
                demo_kubernetes
                demo_cicd
                demo_monitoring
                demo_logging
                demo_security
                demo_database
                show_final_status
                ;;
            9) ./run-all.sh status ;;
            0) 
                print_success "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
                exit 0
                ;;
            *) 
                print_warning "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                ;;
        esac
        
        pause_demo
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    cd "$(dirname "$0")"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if [ "$1" = "auto" ]; then
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
        demo_docker
        demo_kubernetes
        demo_cicd
        demo_monitoring
        demo_logging
        demo_security
        demo_database
        show_final_status
    else
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
        interactive_menu
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
main "$@"
