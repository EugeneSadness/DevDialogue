УДК: 004 
DevOps интеграция в мессенджер 
Е.В. Дамм1 
1ФГАОУ ВО «ОмГУ им. Ф.М. Достоевского», Омск, Россия 
DevOps integration in messenger 
E.V. Damm1
1Dostoevsky Omsk State University, Omsk, Russia 
Аннотация. В данной статье рассматривается процесс разработки и внедрения DevOps-инфраструктуры для мессенджера с целью повышения эффективности разработки, автоматизации развертывания и обеспечения безопасности. Описываются основные этапы реализации, используемые инструменты и полученные результаты. 
Abstract. This article discusses the development and implementation of DevOps infrastructure for a messenger to improve development efficiency, automate deployment, and ensure security. The main stages of implementation, tools used, and results obtained are described. 
Ключевые слова: DevOps; CI/CD; автоматизация мессенджера; Docker; Nginx. 
Keywords: DevOps; CI/CD; automation of messenger; Docker; Nginx. 
1. Введение 
Актуальность темы исследования обусловлена необходимостью повышения эффективности процессов разработки и развертывания программного обеспечения. Использование DevOps-инфраструктур позволяет устранить узкие места и адаптировать процессы поддержки жизненного цикла приложений, особенно тех, которые предполагают высокую интенсивность использования, таких как мессенджеры. 
Целью проекта является разработка и внедрение DevOps-инфраструктуры для обеспечения автоматизации и безопасности мессенджера как программного продукта. 
Объектом исследования выступают процессы интеграции DevOps-инфраструктуры в разработку и эксплуатацию программного обеспечения. 
Предметом исследования являются особенности применения DevOps-методологий, инструментов и технологий (Docker, Nginx, Grafana, Prometheus, GitHub Actions и другие) для обеспечения надежности и безопасности мессенджера. 
2. Методы и технологии 
В работе применялись методы аналитического изучения теоретической литературы по DevOps-методологиям, анализ существующих инструментов автоматизации, проектирование и реализация DevOps-инфраструктуры, а также проверка ее эффективности на примере мессенджера [1], [2]. 
Использовался следующий набор технологий: Nginx, Docker, Vault (хранение секретов), Grafana (визуализация мониторинга), Prometheus (сбор данных), GitHub Actions, GitHub self-hosted runner. [3]-[7] 
3. Реализация DevOps-инфраструктуры 
В рамках проекта была разработана DevOps-инфраструктура(Рис. 1), включающая следующие компоненты: 
- контейнеризация компонентов мессенджера с использованием Docker и docker-compose; 
- настройка безопасного деплоя приложения через систему Nginx и сертификаты Let's Encrypt; 
- Реализация системы автоматизации CI/CD для быстрого и надежного развертывания мессенджера с помощью GitHub Actions; 
- Внедрение мониторинга метрик приложения с использованием инструментов Grafana и Prometheus;
- Настройка системы управления секретными данными с использованием Vault;


  

        Рис. 1. Инфраструктура проекта с инструментами DevOps.
4. CI/CD пайплайн 
Процесс CI/CD построен на GitHub Actions и автоматизирует сборку, тестирование и развертывание приложения(Рис. 2). При каждом пуше в основную ветку запускаются линтеры и тесты для проверки качества кода. Затем приложение строится в виде Docker-образов и отправляется в DockerHub. После успешной сборки GitHub Actions развертывает приложение на сервере через self-hosted runner. 
  

Рис. 2. Конвейер непрерывной интеграции и непрерывного развертывания.
5. Мониторинг и безопасность 
Системы мониторинга Prometheus и Grafana обеспечивают сбор метрик с сервера и их визуализацию(Рис. 4). Анализ статистики нагрузки серверов может быть полезен в разрешении вопроса о необходимости расширения как горизонтального, так и вертикального.
Безопасность приложения обеспечивается через несколько уровней защиты: HTTPS-соединение через Nginx и сертификаты Let's Encrypt, управление доступами и шифрование данных, ограничение количества запросов на уровне Nginx для снижения риска DDoS-атак, изоляция клиента от отправки запросов напрямую к приложению при помощи Nginx Reverse Proxy(Рис. 3). 
  

Рис. 3. Принцип работы Reverse Proxy.


  

  

Рис. 4. Отображение данных в Grafana.
6. Результаты проекта 
В результате выполнения проекта была разработана DevOps-инфраструктура для мессенджера, обеспечивающая автоматизацию процессов разработки, развертывания и эксплуатации, а также повышение безопасности и надежности приложения. Обеспечена безопасность и надежность приложения посредством интеграции Nginx Reverse Proxy и HTTPS-протокола. В настоящее время реализованы: сбор метрик сервера, интеграция обратного прокси-сервера, в процессе поставки новой версии на данный момент выполняется только сборка приложения. Планируется доработка пайплайна с внедрением тестирования приложения, внедрение инструмента Redis для улучшения скорости ответа от приложения, сборка метрик непосредственно с приложения с целью: анализа количества ошибок, измерения средней скорости ответа от приложения, подсчета количества активных пользователей, а также интеграция Vault для обеспечения безопасности секретных данных приложения. 
Список литературы:
1. Ким Д., Бер К., Спаффорд Д. Проект «Феникс». Роман о том, как DevOps меняет бизнес к лучшему. – Litres, 2015.
2. Krief M. Learning DevOps: A comprehensive guide to accelerating DevOps culture adoption with Terraform, Azure DevOps, Kubernetes, and Jenkins. – Packt Publishing Ltd, 2022.
3. Docker Documentation.(Официальная документация Docker: сайт. URL: https://docs.docker.com) 
4. Nginx Documentation.(Официальная документация Nginx: сайт. URL: https://nginx.org/en/docs/)
5. Prometheus Documentation.(Официальная документация Prometheus: сайт. URL: https://prometheus.io/docs)
 
6. Grafana Documentation.(Официальная документация Grafana: сайт. URL: https://grafana.com/docs) 
7. GitHub Actions Documentation.(Официальная документация GitHub Actions: сайт.
URL:  https://docs.github.com/en/actions)
Сведения об авторах:
Дамм Евгений Витальевич – бакалавр 4-го года обучения ФГАОУ ВО «ОмГУ им. Ф.М. Достоевского», e-mail: eugenedamm2003@gmail.com.
Научный руководитель: Ушакова Евгения Валерьевна - старший преподаватель кафедры компьютерной математики и программного обеспечения ФЦТК ФГАОУ ВО «ОмГУ им. Ф.М. Достоевского», SPIN-код:  9904-3140