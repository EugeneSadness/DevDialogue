apiVersion: v1
kind: Secret
metadata:
  name: messenger-secrets
  namespace: messenger
  labels:
    app.kubernetes.io/name: messenger
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Database passwords (base64 encoded)
  # To encode: echo -n "your-password" | base64
  POSTGRES_PASSWORD: cG9zdGdyZXNfcGFzc3dvcmQ=  # postgres_password
  POSTGRES_REPLICATION_PASSWORD: cmVwbGljYV9wYXNzd29yZA==  # replica_password

  # JWT secrets (base64 encoded)
  # Generate with: openssl rand -base64 32 | base64
  JWT_SECRET: WW91ci1zdXBlci1zZWNyZXQtand0LWtleQ==  # Your-super-secret-jwt-key
  REFRESH_TOKEN_SECRET: WW91ci1yZWZyZXNoLXRva2VuLXNlY3JldA==  # Your-refresh-token-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: messenger
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/component: secret
type: Opaque
data:
  DB_PASS: YXV0aF9wYXNzd29yZA==  # auth_password
---
apiVersion: v1
kind: Secret
metadata:
  name: message-service-secrets
  namespace: messenger
  labels:
    app.kubernetes.io/name: message-service
    app.kubernetes.io/component: secret
type: Opaque
data:
  DB_PASS: bWVzc2FnZV9wYXNzd29yZA==  # message_password
---
apiVersion: v1
kind: Secret
metadata:
  name: notification-service-secrets
  namespace: messenger
  labels:
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/component: secret
type: Opaque
data:
  DB_PASS: bm90aWZpY2F0aW9uX3Bhc3N3b3Jk  # notification_password
  # VAPID keys for push notifications (base64 encoded)
  # Generate with web-push generate-vapid-keys
  VAPID_PUBLIC_KEY: VGVzdFZhcGlkUHVibGljS2V5  # TestVapidPublicKey
  VAPID_PRIVATE_KEY: VGVzdFZhcGlkUHJpdmF0ZUtleQ==  # TestVapidPrivateKey
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-service-secrets
  namespace: messenger
  labels:
    app.kubernetes.io/name: monitoring-service
    app.kubernetes.io/component: secret
type: Opaque
data:
  DB_PASS: bW9uaXRvcmluZ19wYXNzd29yZA==  # monitoring_password
---
# TLS Secret for HTTPS (if using custom certificates)
apiVersion: v1
kind: Secret
metadata:
  name: messenger-tls
  namespace: messenger
  labels:
    app.kubernetes.io/name: messenger
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Replace with actual certificate and key (base64 encoded)
  tls.crt: VGVzdENlcnRpZmljYXRl  # TestCertificate
  tls.key: VGVzdFByaXZhdGVLZXk=  # TestPrivateKey