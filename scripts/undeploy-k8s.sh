#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏–∑ Kubernetes
# –ê–≤—Ç–æ—Ä: –î–∏–ø–ª–æ–º–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

info() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v kubectl &> /dev/null; then
        error "kubectl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        exit 1
    fi
    
    if ! kubectl cluster-info &> /dev/null; then
        error "–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É."
        exit 1
    fi
    
    log "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã ‚úÖ"
}

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
confirm_deletion() {
    echo ""
    warn "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ –∏–∑ Kubernetes!"
    warn "‚ö†Ô∏è  –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!"
    echo ""
    
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " -r
    if [[ ! $REPLY =~ ^[Yy][Ee][Ss]$ ]]; then
        info "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
    
    echo ""
    warn "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í–≤–µ–¥–∏—Ç–µ 'DELETE' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:"
    read -p "> " -r
    if [[ $REPLY != "DELETE" ]]; then
        info "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ Network Policies
remove_network_policies() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ Network Policies..."
    
    if kubectl get networkpolicies -n messenger &> /dev/null; then
        kubectl delete -f k8s/network-policies.yaml --ignore-not-found=true
        log "Network Policies —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
    else
        info "Network Policies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ HPA
remove_hpa() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ Horizontal Pod Autoscaler..."
    
    if kubectl get hpa -n messenger &> /dev/null; then
        kubectl delete -f k8s/hpa.yaml --ignore-not-found=true
        log "HPA —É–¥–∞–ª–µ–Ω ‚úÖ"
    else
        info "HPA –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ Ingress
remove_ingress() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ Ingress..."
    
    if kubectl get ingress -n messenger &> /dev/null; then
        kubectl delete -f k8s/ingress.yaml --ignore-not-found=true
        log "Ingress —É–¥–∞–ª–µ–Ω ‚úÖ"
    else
        info "Ingress –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ Services
remove_services() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ Services..."
    
    if kubectl get services -n messenger &> /dev/null; then
        kubectl delete -f k8s/services.yaml --ignore-not-found=true
        log "Services —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
    else
        info "Services –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ Deployments
remove_deployments() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ Deployments..."
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    info "–£–¥–∞–ª–µ–Ω–∏–µ Nginx Gateway..."
    kubectl delete -f k8s/deployments/nginx.yaml --ignore-not-found=true
    
    info "–£–¥–∞–ª–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤..."
    kubectl delete -f k8s/deployments/monitoring-service.yaml --ignore-not-found=true
    kubectl delete -f k8s/deployments/notification-service.yaml --ignore-not-found=true
    kubectl delete -f k8s/deployments/message-service.yaml --ignore-not-found=true
    kubectl delete -f k8s/deployments/auth-service.yaml --ignore-not-found=true
    
    info "–£–¥–∞–ª–µ–Ω–∏–µ PostgreSQL..."
    kubectl delete -f k8s/deployments/postgres.yaml --ignore-not-found=true
    
    log "Deployments —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
}

# –£–¥–∞–ª–µ–Ω–∏–µ ConfigMaps –∏ Secrets
remove_configs() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    
    kubectl delete -f k8s/configmaps.yaml --ignore-not-found=true
    kubectl delete -f k8s/postgres-init-configmap.yaml --ignore-not-found=true
    kubectl delete -f k8s/secrets.yaml --ignore-not-found=true
    
    log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
}

# –£–¥–∞–ª–µ–Ω–∏–µ PVC (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
remove_pvcs() {
    read -p "–£–¥–∞–ª–∏—Ç—å Persistent Volume Claims (–¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã)? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "–£–¥–∞–ª–µ–Ω–∏–µ PVC..."
        kubectl delete pvc --all -n messenger --ignore-not-found=true
        log "PVC —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
    else
        info "PVC —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ namespace
remove_namespace() {
    read -p "–£–¥–∞–ª–∏—Ç—å namespace 'messenger'? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "–£–¥–∞–ª–µ–Ω–∏–µ namespace..."
        kubectl delete namespace messenger --ignore-not-found=true
        log "Namespace —É–¥–∞–ª–µ–Ω ‚úÖ"
    else
        info "Namespace —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ä–µ—Å—É—Ä—Å–æ–≤
check_remaining_resources() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ä–µ—Å—É—Ä—Å–æ–≤..."
    
    if kubectl get namespace messenger &> /dev/null; then
        echo ""
        info "–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ä–µ—Å—É—Ä—Å—ã –≤ namespace messenger:"
        kubectl get all -n messenger 2>/dev/null || info "–ù–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ namespace"
        
        echo ""
        info "PVC –≤ namespace messenger:"
        kubectl get pvc -n messenger 2>/dev/null || info "–ù–µ—Ç PVC –≤ namespace"
    else
        info "Namespace messenger –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
cleanup_docker_images() {
    read -p "–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ Docker –æ–±—Ä–∞–∑—ã –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "–û—á–∏—Å—Ç–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞
        docker images | grep "messenger/" | awk '{print $3}' | xargs -r docker rmi -f 2>/dev/null || true
        
        # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤
        docker image prune -f
        
        log "Docker –æ–±—Ä–∞–∑—ã –æ—á–∏—â–µ–Ω—ã ‚úÖ"
    else
        info "Docker –æ–±—Ä–∞–∑—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏–∑ Kubernetes"
    
    check_dependencies
    confirm_deletion
    
    remove_network_policies
    remove_hpa
    remove_ingress
    remove_services
    remove_deployments
    remove_configs
    remove_pvcs
    remove_namespace
    
    check_remaining_resources
    cleanup_docker_images
    
    log "üéâ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    info "–î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   docker system prune -a"
    echo "   kubectl config delete-context <context-name>"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
