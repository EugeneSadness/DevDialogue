#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
# –ê–≤—Ç–æ—Ä: –î–∏–ø–ª–æ–º–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
# –í–µ—Ä—Å–∏—è: 1.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

info() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
DB_HOST="localhost"
DB_PORT="5432"
DB_USER="postgres"
DB_PASS="postgres_password"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∑–∞–ø—Ä–æ—Å–∞
execute_sql() {
    local database=$1
    local query=$2
    local description=$3
    
    info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description"
    
    if PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $database -c "$query" > /dev/null 2>&1; then
        log "‚úÖ $description - –£–°–ü–ï–®–ù–û"
        return 0
    else
        error "‚ùå $description - –û–®–ò–ë–ö–ê"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
check_postgres_connection() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
    
    if PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d postgres -c "SELECT version();" > /dev/null 2>&1; then
        log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    else
        error "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
check_databases_exist() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    databases=("auth_db" "message_db" "notification_db" "monitoring_db")
    
    for db in "${databases[@]}"; do
        if PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d postgres -lqt | cut -d \| -f 1 | grep -qw $db; then
            log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $db —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        else
            error "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö $db –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            return 1
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
check_database_users() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö..."
    
    users=("auth_user" "message_user" "notification_user" "monitoring_user")
    
    for user in "${users[@]}"; do
        if PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d postgres -c "SELECT 1 FROM pg_user WHERE usename='$user';" | grep -q "1 row"; then
            log "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $user —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        else
            error "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $user –Ω–µ –Ω–∞–π–¥–µ–Ω"
            return 1
        fi
    done
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ auth_db
test_auth_db() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö auth_db..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    execute_sql "auth_db" "SELECT COUNT(*) FROM information_schema.tables WHERE table_name IN ('users', 'user_sessions', 'refresh_tokens');" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü auth_db"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    execute_sql "auth_db" "INSERT INTO users (username, email, password_hash, first_name, last_name) VALUES ('testuser', 'test@example.com', 'hashed_password', 'Test', 'User') ON CONFLICT (email) DO NOTHING;" "–í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    execute_sql "auth_db" "SELECT COUNT(*) FROM users WHERE email = 'test@example.com';" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    execute_sql "auth_db" "DELETE FROM users WHERE email = 'test@example.com';" "–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ message_db
test_message_db() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö message_db..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    execute_sql "message_db" "SELECT COUNT(*) FROM information_schema.tables WHERE table_name IN ('chats', 'chat_members', 'messages', 'files', 'message_files');" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü message_db"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    execute_sql "message_db" "INSERT INTO chats (name, description, created_by) VALUES ('Test Chat', 'Test Description', 1) ON CONFLICT DO NOTHING;" "–í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–∞—Ç–∞"
    
    execute_sql "message_db" "SELECT COUNT(*) FROM chats WHERE name = 'Test Chat';" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–∞—Ç–∞"
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    execute_sql "message_db" "DELETE FROM chats WHERE name = 'Test Chat';" "–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ notification_db
test_notification_db() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö notification_db..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    execute_sql "notification_db" "SELECT COUNT(*) FROM information_schema.tables WHERE table_name IN ('push_subscriptions', 'notifications', 'notification_settings', 'notification_templates');" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü notification_db"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    execute_sql "notification_db" "SELECT COUNT(*) FROM notification_templates;" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    execute_sql "notification_db" "INSERT INTO notification_settings (user_id, push_enabled, email_enabled) VALUES (999, true, true) ON CONFLICT (user_id) DO NOTHING;" "–í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"
    
    execute_sql "notification_db" "SELECT COUNT(*) FROM notification_settings WHERE user_id = 999;" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    execute_sql "notification_db" "DELETE FROM notification_settings WHERE user_id = 999;" "–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ monitoring_db
test_monitoring_db() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö monitoring_db..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    execute_sql "monitoring_db" "SELECT COUNT(*) FROM information_schema.tables WHERE table_name IN ('service_metrics', 'health_checks', 'system_logs', 'alerts', 'monitoring_config', 'uptime_stats');" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü monitoring_db"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    execute_sql "monitoring_db" "SELECT COUNT(*) FROM monitoring_config;" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    execute_sql "monitoring_db" "INSERT INTO service_metrics (service_name, metric_name, metric_value, metric_type) VALUES ('test-service', 'test_metric', 100.0, 'gauge');" "–í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –º–µ—Ç—Ä–∏–∫–∏"
    
    execute_sql "monitoring_db" "SELECT COUNT(*) FROM service_metrics WHERE service_name = 'test-service';" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –º–µ—Ç—Ä–∏–∫–∏"
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    execute_sql "monitoring_db" "DELETE FROM service_metrics WHERE service_name = 'test-service';" "–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏
test_replication() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ PostgreSQL..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ master
    if PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d postgres -c "SELECT client_addr, state FROM pg_stat_replication;" | grep -q "streaming"; then
        log "‚úÖ –†–µ–ø–ª–∏–∫–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞"
    else
        warn "‚ö†Ô∏è –†–µ–ø–ª–∏–∫–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ slave –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ slave
    if PGPASSWORD=$DB_PASS psql -h $DB_HOST -p 5433 -U $DB_USER -d postgres -c "SELECT pg_is_in_recovery();" | grep -q "t"; then
        log "‚úÖ Slave —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    else
        warn "‚ö†Ô∏è Slave —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
show_database_stats() {
    log "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö:"
    
    databases=("auth_db" "message_db" "notification_db" "monitoring_db")
    
    for db in "${databases[@]}"; do
        info "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $db"
        PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $db -c "
        SELECT 
            schemaname,
            tablename,
            n_tup_ins as inserts,
            n_tup_upd as updates,
            n_tup_del as deletes
        FROM pg_stat_user_tables 
        ORDER BY tablename;
        " 2>/dev/null || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è $db"
        echo ""
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤"
    
    check_postgres_connection
    check_databases_exist
    check_database_users
    
    test_auth_db
    test_message_db
    test_notification_db
    test_monitoring_db
    
    test_replication
    show_database_stats
    
    log "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
