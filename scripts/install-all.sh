#!/bin/bash

# Diploma Messenger DevOps Integration - Complete Installation Script
# –ê–≤—Ç–æ—Ä: Eugene Damm

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É DevOps –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Kubernetes
    if ! command -v kubectl &> /dev/null; then
        warn "kubectl –Ω–µ –Ω–∞–π–¥–µ–Ω. Kubernetes –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã."
        SKIP_K8S=true
    fi
    
    log "‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
install_docker() {
    log "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    
    cd deployment
    docker-compose down 2>/dev/null || true
    docker-compose up -d
    
    log "‚úÖ Docker –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã"
    log "üì± –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
install_monitoring() {
    log "üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    cd ../monitoring
    
    # –ó–∞–ø—É—Å–∫ Prometheus
    if [ -f prometheus/prometheus.yml ]; then
        docker run -d \
            --name prometheus \
            -p 9090:9090 \
            -v $(pwd)/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \
            prom/prometheus
        log "‚úÖ Prometheus –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 9090"
    fi
    
    # –ó–∞–ø—É—Å–∫ Grafana
    docker run -d \
        --name grafana \
        -p 3001:3000 \
        -e GF_SECURITY_ADMIN_PASSWORD=admin \
        grafana/grafana
    
    log "‚úÖ Grafana –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ –ø–æ—Ä—Ç—É 3001 (admin/admin)"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
install_logging() {
    log "üìù –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    cd ../logging/elk-stack
    
    if [ -f docker-compose.yml ]; then
        docker-compose up -d
        log "‚úÖ ELK Stack –∑–∞–ø—É—â–µ–Ω"
        log "üîç Kibana –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5601"
    else
        warn "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ELK Stack –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
install_security() {
    log "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    cd ../security/vault-setup
    
    if [ -f docker-compose.yml ]; then
        docker-compose up -d
        log "‚úÖ HashiCorp Vault –∑–∞–ø—É—â–µ–Ω"
        log "üîê Vault UI –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8200"
    else
        warn "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vault –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
install_database() {
    log "üóÑÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL —Å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–µ–π..."
    
    cd ../database/postgres-replication
    
    if [ -f docker-compose.yml ]; then
        docker-compose up -d
        log "‚úÖ PostgreSQL –∫–ª–∞—Å—Ç–µ—Ä —Å —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–µ–π –∑–∞–ø—É—â–µ–Ω"
    else
        warn "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PostgreSQL —Ä–µ–ø–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
install_kubernetes() {
    if [ "$SKIP_K8S" = true ]; then
        warn "–ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Kubernetes –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
        return
    fi
    
    log "‚ò∏Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    
    cd ../k8s-manifests
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤
    kubectl apply -f . 2>/dev/null || warn "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å"
    
    log "‚úÖ Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    echo -e "\n${BLUE}=== –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í ===${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    echo -e "\n${YELLOW}Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    echo -e "\n${YELLOW}–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤:${NC}"
    
    services=(
        "http://localhost:3000|–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä"
        "http://localhost:3001|Grafana"
        "http://localhost:5601|Kibana"
        "http://localhost:8200|Vault"
        "http://localhost:9090|Prometheus"
    )
    
    for service in "${services[@]}"; do
        IFS='|' read -r url name <<< "$service"
        if curl -s "$url" > /dev/null 2>&1; then
            echo -e "‚úÖ $name: ${GREEN}–î–æ—Å—Ç—É–ø–µ–Ω${NC} ($url)"
        else
            echo -e "‚ùå $name: ${RED}–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC} ($url)"
        fi
    done
}

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–µ
show_access_info() {
    echo -e "\n${BLUE}=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –î–û–°–¢–£–ü–ï ===${NC}"
    echo -e "üì± ${YELLOW}–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä:${NC} http://localhost:3000"
    echo -e "üìä ${YELLOW}Grafana:${NC} http://localhost:3001 (admin/admin)"
    echo -e "üîç ${YELLOW}Kibana:${NC} http://localhost:5601"
    echo -e "üîê ${YELLOW}Vault:${NC} http://localhost:8200"
    echo -e "üìà ${YELLOW}Prometheus:${NC} http://localhost:9090"
    echo -e "\n${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ DevOps –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
    
    check_requirements
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd "$(dirname "$0")/.."
    
    install_docker
    install_monitoring
    install_logging
    install_security
    install_database
    install_kubernetes
    
    sleep 10  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    
    check_services
    show_access_info
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"
